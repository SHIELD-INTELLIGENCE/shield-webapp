apply plugin: 'com.android.application'

android {
    namespace "com.shieldintelligence.in"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.shieldintelligence.in"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "1.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            // Ignore unnecessary assets
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    signingConfigs {
        release {
            // Path to your keystore file (relative to app/ dir)
            storeFile file("shield-release-key.jks")
            storePassword System.getenv("SHIELD_KEYSTORE_PASSWORD") ?: project.properties["SHIELD_KEYSTORE_PASSWORD"]
            keyAlias System.getenv("SHIELD_KEY_ALIAS") ?: project.properties["SHIELD_KEY_ALIAS"]
            keyPassword System.getenv("SHIELD_KEY_PASSWORD") ?: project.properties["SHIELD_KEY_PASSWORD"]
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Debug builds stay unsigned, no shrink/minify
            minifyEnabled false
        }
    }

    // Optional: enable modern build features
    buildFeatures {
        viewBinding true
    }
}


repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation 'com.google.android.material:material:1.9.0'
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}


apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
