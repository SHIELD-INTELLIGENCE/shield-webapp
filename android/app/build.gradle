apply plugin: 'com.android.application'

android {
    namespace "com.shieldintelligence.in"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
    applicationId "com.shieldintelligence.in"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion

    // ðŸ”¥ Auto versioning:
    def buildDate = new Date().format('yyyyMMddHHmm')
    versionCode buildDate as int
    versionName "1.0-${buildDate}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    aaptOptions {
        ignoreAssetsPattern '!.svn:!.git:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}


    // âœ… Sign configs moved inside android block
    signingConfigs {
        release {
            storeFile file("my-release-key.jks")
            storePassword "weareshield"
            keyAlias "SHIELD"
            keyPassword "weareshield"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

// Apply Capacitor and optionally Google services
apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
