// src/App.jsx
import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';
import { auth } from './firebase';
import { signOut } from 'firebase/auth';

import Home from './pages/Home';
import About from './pages/About';
import JoinUs from './pages/JoinUs';
import HireAgent from './pages/HireAgent';
import Terms from './pages/Terms';
import JoinUsTerms from './pages/JoinUsTerms';
import Feeds from './pages/Feeds';
import Login from './pages/Login';

function Navbar({ user, onLogout }) {
  const [showMenu, setShowMenu] = useState(false);

  return (
    <nav className="navbar bg-gray-800 p-2 flex items-center justify-between text-white">
      {/* Main links */}
      <div className="flex space-x-4">
        <Link to="/" className="nav-btn">Home</Link>
        <Link to="/about" className="nav-btn">About</Link>
        <Link to="/join-us" className="nav-btn">Join Us</Link>
        <Link to="/hire-agent" className="nav-btn">Hire an Agent</Link>
        {user && <Link to="/feeds" className="nav-btn">Feeds</Link>}
      </div>

      {/* Hamburger for login/logout */}
      <div className="relative">
        <button
          className="hamburger text-2xl p-2"
          onClick={() => setShowMenu(!showMenu)}
        >
          â˜°
        </button>
        {showMenu && (
          <div className="absolute right-0 mt-2 bg-white text-black rounded shadow p-2 space-y-2">
            {user ? (
              <button
                onClick={onLogout}
                className="block w-full text-left p-2 hover:bg-gray-100"
              >
                Logout
              </button>
            ) : (
              <Link
                to="/login"
                className="block w-full text-left p-2 hover:bg-gray-100"
                onClick={() => setShowMenu(false)}
              >
                Login
              </Link>
            )}
          </div>
        )}
      </div>
    </nav>
  );
}

function AppContent() {
  const [user, setUser] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const unsub = auth.onAuthStateChanged((u) => {
      setUser(u);
    });
    return () => unsub();
  }, []);

  const handleLogout = async () => {
    await signOut(auth);
    navigate('/'); // go home after logout
  };

  return (
    <>
      <Navbar user={user} onLogout={handleLogout} />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
        <Route path="/join-us" element={<JoinUs />} />
        <Route path="/hire-agent" element={<HireAgent />} />
        <Route path="/terms" element={<Terms />} />
        <Route path="/join-us-terms" element={<JoinUsTerms />} />
        <Route path="/feeds" element={user ? <Feeds /> : <Login />} />
        <Route path="/login" element={<Login />} />
      </Routes>
    </>
  );
}

export default function App() {
  return (
    <Router>
      <AppContent />
    </Router>
  );
}
